{"ast":null,"code":"export function getMetaValue(name) {\n  var element = findElement(document.head, \"meta[name=\\\"\".concat(name, \"\\\"]\"));\n\n  if (element) {\n    return element.getAttribute(\"content\");\n  }\n}\nexport function findElement(root, selector) {\n  if (typeof root == \"string\") {\n    selector = root;\n    root = document;\n  }\n\n  return root.querySelector(selector);\n}\nexport function toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  } else if (Array.from) {\n    return Array.from(value);\n  } else {\n    return [].slice.call(value);\n  }\n}\nexport function removeElement(el) {\n  if (el && el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n}\nexport function insertAfter(el, referenceNode) {\n  return referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\n}","map":{"version":3,"sources":["/Users/joe/My_app/Timmick/app/javascript/helpers/index.js"],"names":["getMetaValue","name","element","findElement","document","head","getAttribute","root","selector","querySelector","toArray","value","Array","isArray","from","slice","call","removeElement","el","parentNode","removeChild","insertAfter","referenceNode","insertBefore","nextSibling"],"mappings":"AAAA,OAAO,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AACjC,MAAMC,OAAO,GAAGC,WAAW,CAACC,QAAQ,CAACC,IAAV,wBAA8BJ,IAA9B,SAA3B;;AACA,MAAIC,OAAJ,EAAa;AACX,WAAOA,OAAO,CAACI,YAAR,CAAqB,SAArB,CAAP;AACD;AACF;AAED,OAAO,SAASH,WAAT,CAAqBI,IAArB,EAA2BC,QAA3B,EAAqC;AAC1C,MAAI,OAAOD,IAAP,IAAe,QAAnB,EAA6B;AAC3BC,IAAAA,QAAQ,GAAGD,IAAX;AACAA,IAAAA,IAAI,GAAGH,QAAP;AACD;;AACD,SAAOG,IAAI,CAACE,aAAL,CAAmBD,QAAnB,CAAP;AACD;AAED,OAAO,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,MAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EAA0B;AACxB,WAAOA,KAAP;AACD,GAFD,MAEO,IAAIC,KAAK,CAACE,IAAV,EAAgB;AACrB,WAAOF,KAAK,CAACE,IAAN,CAAWH,KAAX,CAAP;AACD,GAFM,MAEA;AACL,WAAO,GAAGI,KAAH,CAASC,IAAT,CAAcL,KAAd,CAAP;AACD;AACF;AAED,OAAO,SAASM,aAAT,CAAuBC,EAAvB,EAA2B;AAChC,MAAIA,EAAE,IAAIA,EAAE,CAACC,UAAb,EAAyB;AACvBD,IAAAA,EAAE,CAACC,UAAH,CAAcC,WAAd,CAA0BF,EAA1B;AACD;AACF;AAED,OAAO,SAASG,WAAT,CAAqBH,EAArB,EAAyBI,aAAzB,EAAwC;AAC7C,SAAOA,aAAa,CAACH,UAAd,CAAyBI,YAAzB,CAAsCL,EAAtC,EAA0CI,aAAa,CAACE,WAAxD,CAAP;AACD","sourcesContent":["export function getMetaValue(name) {\n  const element = findElement(document.head, `meta[name=\"${name}\"]`);\n  if (element) {\n    return element.getAttribute(\"content\");\n  }\n}\n\nexport function findElement(root, selector) {\n  if (typeof root == \"string\") {\n    selector = root;\n    root = document;\n  }\n  return root.querySelector(selector);\n}\n\nexport function toArray(value) {\n  if (Array.isArray(value)) {\n    return value;\n  } else if (Array.from) {\n    return Array.from(value);\n  } else {\n    return [].slice.call(value);\n  }\n}\n\nexport function removeElement(el) {\n  if (el && el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n}\n\nexport function insertAfter(el, referenceNode) {\n  return referenceNode.parentNode.insertBefore(el, referenceNode.nextSibling);\n}\n"]},"metadata":{},"sourceType":"module"}